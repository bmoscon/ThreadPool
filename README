A thread pool manager, written in C++


example usage:

1. create a ThreadPool object:

ThreadPool pool = ThreadPool();


2. Add some tasks

pool.addWork(&FUNCTION_POINTER, NULL, 1);


3. Start processing!

pool.start();


Steps 2 and 3 may be reversed. That is, you can add tasks/work to a "stopped" thread pool.  



See the comments in the code for more details.
